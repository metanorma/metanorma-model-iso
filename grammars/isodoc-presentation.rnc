include "isodoc.rnc" {

misccontainer = element metanorma-extension { AnyElement+, metanorma-source-container }

## ONLY in the context of //bibdata/language
language = element language {
  ## of the languages present in document metadata, this language value corresponds to the document default
  attribute current { xsd:boolean }?,
  LanguageType
}

## ONLY in the context of //bibdata/locale
locale = element locale {
  ## of the locales present in document metadata, this locale value corresponds to the document default
  attribute current { xsd:boolean }?,
  LocaleType
}

## ONLY in the context of //bibdata/script
script = element script {
  ## of the scripts present in document metadata, this script value corresponds to the document default
  attribute current { xsd:boolean }?,
  ScriptType
}

address =
  element address {
    ## Address decomposed into its component parts
    AddressComponents?,
    ## If not already present, generate a preformatted version of the address, concatenating its component parts,
    ## delimited by linebreak
    formattedAddress
}

BibDataExtensionType =
  attribute schema-version { text }?,
  ## Duplicate doctype, giving a translation of the doctype into the current i18n language
  doctype+,
  docsubtype?,
  editorialgroup?,
  ics*,
  structuredidentifier*

status =
  element status {
     ## Duplicate stage, giving a translation of the stage into the current i18n language
     stage+,
     ## Duplicate substage, giving a translation of the substage into the current i18n language
     substage*,
     iteration?
}

BibliographicItem =
    attribute type { BibItemType }?,
    attribute schema-version { text }?,
    fetched?,
    formattedref?,
    btitle+,
    bsource*,
    docidentifier+,
    docnumber?,
    bdate*,
    contributor*,
    ## Duplicate edition, giving a translation of the substage into the current i18n language
    edition*,
    version*,
    biblionote*,
    language*,
    locale*,
    script*,
    bibabstract*,
    status?,
    copyright*,
    docrelation*,
    series*,
    medium?,
    bplace*,
    bprice*,
    extent*,
    bibliographic_size?,
    accesslocation*,
    license*,
    bclassification*,
    bkeyword*,
    validity?,
    depiction?

doctype = element doctype {
  ## Through i18n, generate a translation of the Semantic doctype value, with language set to the current language.
  ## The original value is indicated with language=""
  attribute language { LanguageType }?,
  attribute abbreviation { text }?,
  DocumentType
}

stage = element stage {
  ## Through i18n, generate a translation of the Semantic stage value, with language set to the current language.
  ## The original value is indicated with language=""
  attribute language { LanguageType }?,
  attribute abbreviation { text }?,
  text
}

substage = element substage {
  ## Through i18n, generate a translation of the Semantic substage value, with language set to the current language.
  ## The original value is indicated with language=""
  attribute language { LanguageType }?,
  attribute abbreviation { text }?,
  text
}

edition = element edition {
  ## Through i18n, generate a translation of the Semantic human-readable edition value, with language set to the current language.
  ## The original value is indicated with language="". The i18n may involve ordinals
  attribute language { LanguageType }?,
  attribute number { text }?,
  text
}



}

# end overrides

metanorma-source-container = element metanorma { metanorma-source }

## The metanorma-source element contains a copy of the Semantic XML, so that downstream
## consumers can process Semantic XML and Presentation XML in tandem. The Semantic and
## Presentation XML are aligned as follows, in order to avoid duplicate references and
## to segregate the embedded XML from processing:
##
## * Each element in metanorma-source is prefixed with semantic__ : <semantic__p>
## * Any namespaced element has semantic_ prefixed to its name : <mathml:semantic__math>
## * The root namespace of the embedded Semantic XML is stripped : <semantic__iso-document> (no ns)
## * Every attribute of the Semantic XML that is an identifier (id, name) is prefixed with semantic__ :
##   <semantic__p id="semantic__A123">
## * Every attribute of the Semantic XML that references an element identifier is prefixed with semantic__ :
##   <semantic_xref target="semantic__A123">
metanorma-source = element metanorma { AnyElement+ }
